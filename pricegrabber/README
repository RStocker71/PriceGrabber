PriceGrabber
------------

Purpose: Extracts price and other product data from websites
-------

Prerequisites:
-------------
- Install Apache Maven and add 'mvn' to PATH or create a symbolic link to /usr/bin
- Download the platform specific OCR library from http://asprise.com/product/ocr/download.php?lang=java
- Put the native library (either libAspriseOCR.dll, libAspriseOCR.jnilib, or xx.so) to java.library.path (ex. /usr/lib on Linux or /usr/lib/java on OSX)
  Of course you may also add a JVM parameter like -Djava.library.path=/path/to/libAspriseOCRfolder

Configuration:
-------------
- Grabber needs a GrabberConfiguration, which contains an implementation of a ISimpleParser, a map with a
  GrabDefinition for each domain, and a IGrabResultAdapter which acts like a bridge to your model class.
- Have a look at MusixGrabberConfigurationBuilder to see how a configuration needs to be built.

Selector definitions:
--------------------
- for each domain to grab from, add a <domain>.properties file to src/main/resources/selectors
- have a look on the two existing files. selectors use XPath syntax.



Build:
----- 
from the project root directory run
> mvn jetty:run

Run: open your browser and navigate to http://localhost:8080/pricegrabber

Disclaimer: this is only for testing purpose, no warranty. If you want to use it in production, buy an Asprise Licence.

Limitations / TODO:
------------------
- OCR sometimes fails
- No check for duplicates
- No internationalization
- In Javascript we should disable clicking twice to refreh/submit before the previous request ends

Version History
---------------
Version 1.1: 
- Refactoring of almost everything except the basic webapplication itself
- The Grabber (former Contentparser) now has a GrabberConfiguration and provides a GrabResult
- Improved exception handling and error reporting

Version 1.0:
- Initial version
